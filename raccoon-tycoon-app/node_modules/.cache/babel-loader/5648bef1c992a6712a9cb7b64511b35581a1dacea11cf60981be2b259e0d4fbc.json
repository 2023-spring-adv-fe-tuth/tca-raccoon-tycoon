{"ast":null,"code":"import _toConsumableArray from\"C:/Users/steph/OneDrive/Documents/GitHub/personal/tca-raccoon-tycoon/raccoon-tycoon-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"C:/Users/steph/OneDrive/Documents/GitHub/personal/tca-raccoon-tycoon/raccoon-tycoon-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/steph/OneDrive/Documents/GitHub/personal/tca-raccoon-tycoon/raccoon-tycoon-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Button from'react-bootstrap/Button';import Form from'react-bootstrap/Form';import{useNavigate}from'react-router-dom';import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";;export var Setup=function Setup(_ref){var previousPlayers=_ref.previousPlayers,setSetupInfo=_ref.setSetupInfo;var nav=useNavigate();var _useState=useState(previousPlayers.map(function(x){return{name:x,checked:false};})),_useState2=_slicedToArray(_useState,2),chosenPlayers=_useState2[0],setChosenPlayers=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newPlayerName=_useState4[0],setNewPlayerName=_useState4[1];var togglePlayer=function togglePlayer(name){return setChosenPlayers(chosenPlayers.map(function(x){return _objectSpread(_objectSpread({},x),{},{checked:x.name==name?!x.checked:x.checked});}));};var recordGame=function recordGame(){setSetupInfo({start:new Date().toISOString(),chosenPlayers:chosenPlayers.filter(function(x){return x.checked;}).map(function(x){return x.name;})});nav(\"/finish\");};var validateAndAddNewPlayer=function validateAndAddNewPlayer(){if(newPlayerName.length==0||chosenPlayers.some(function(x){return x.name.localeCompare(newPlayerName)==0;})){return;}setChosenPlayers([].concat(_toConsumableArray(chosenPlayers),[{name:newPlayerName,checked:true}]));setNewPlayerName(\"\");};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Players\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add new player/select player\"}),/*#__PURE__*/_jsxs(Form,{className:\"mt-5\",children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Add New Player\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Player name\",value:newPlayerName,onChange:function onChange(e){return setNewPlayerName(e.target.value);},className:\"mb-3\"}),/*#__PURE__*/_jsx(Button,{onClick:validateAndAddNewPlayer,children:\"Confirm\"})]}),chosenPlayers.map(function(x){return/*#__PURE__*/_jsx(Form.Check,{label:x.name,checked:x.checked,onChange:function onChange(){return togglePlayer(x.name);},className:\"Checks mb-3\"});})]}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:recordGame,children:\"Record Game\"}),' ']});};","map":{"version":3,"names":["Button","Form","useNavigate","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Setup","_ref","previousPlayers","setSetupInfo","nav","_useState","map","x","name","checked","_useState2","_slicedToArray","chosenPlayers","setChosenPlayers","_useState3","_useState4","newPlayerName","setNewPlayerName","togglePlayer","_objectSpread","recordGame","start","Date","toISOString","filter","validateAndAddNewPlayer","length","some","localeCompare","concat","_toConsumableArray","children","className","Group","Label","Control","type","placeholder","value","onChange","e","target","onClick","Check","label","variant"],"sources":["C:/Users/steph/OneDrive/Documents/GitHub/personal/tca-raccoon-tycoon/raccoon-tycoon-app/src/Setup.tsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { SetupInfo } from './front-end-model';\r\n\r\nexport interface SetupProps {\r\n    previousPlayers: string[];\r\n    setSetupInfo: (info: SetupInfo) => void;\r\n};\r\n\r\nexport const Setup: React.FC<SetupProps> = ({\r\n    previousPlayers\r\n    , setSetupInfo\r\n}) => {\r\n\r\n    const nav = useNavigate();\r\n\r\n    const [chosenPlayers, setChosenPlayers] = useState(\r\n        previousPlayers.map(x => ({\r\n            name: x\r\n            , checked: false\r\n        }))\r\n    );\r\n\r\n    const [newPlayerName, setNewPlayerName] = useState(\"\");\r\n\r\n    const togglePlayer = (name: string) => setChosenPlayers(\r\n        chosenPlayers.map(x => ({\r\n            ...x \r\n            , checked: x.name == name ? !x.checked : x.checked\r\n        }))\r\n    );\r\n\r\n    const recordGame = () => {\r\n        setSetupInfo({\r\n            start: new Date().toISOString()\r\n            , chosenPlayers: chosenPlayers\r\n                .filter(x => x.checked)\r\n                .map(x => x.name)\r\n        });\r\n        nav(\"/finish\");\r\n    };\r\n\r\n    const validateAndAddNewPlayer = () => {\r\n        if (\r\n            newPlayerName.length == 0\r\n            || chosenPlayers.some(x => x.name.localeCompare(newPlayerName) == 0)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setChosenPlayers(\r\n            [\r\n                ...chosenPlayers\r\n                , {\r\n                    name: newPlayerName\r\n                    , checked: true\r\n                }\r\n            ]\r\n        );\r\n\r\n        setNewPlayerName(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Players</h2>\r\n            <p>Add new player/select player</p>\r\n\r\n            <Form className=\"mt-5\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Add New Player</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Player name\"\r\n                        value={newPlayerName}\r\n                        onChange={(e) => setNewPlayerName(e.target.value)}\r\n                        className=\"mb-3\" \r\n                    />\r\n                    <Button\r\n                        onClick={validateAndAddNewPlayer}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </Form.Group>     \r\n\r\n                {\r\n                    chosenPlayers.map(x =>(\r\n                        <Form.Check\r\n                            label={x.name}\r\n                            checked={x.checked}\r\n                            onChange={() => togglePlayer(x.name)}\r\n                            className=\"Checks mb-3\" \r\n                        />\r\n                    ))\r\n                }\r\n            </Form>\r\n\r\n            <Button \r\n                variant=\"primary\"\r\n                onClick={recordGame} \r\n            >\r\n                Record Game\r\n            </Button>{' '}\r\n        </>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}