{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\OneDrive\\\\Documents\\\\GitHub\\\\personal\\\\tca-raccoon-tycoon\\\\raccoon-tycoon-app\\\\src\\\\Setup.tsx\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\nexport const Setup = _ref => {\n  _s();\n  let {\n    previousPlayers,\n    setSetupInfo\n  } = _ref;\n  const nav = useNavigate();\n  const [chosenPlayers, setChosenPlayers] = useState(previousPlayers.map(x => ({\n    name: x,\n    checked: false\n  })));\n  const togglePlayer = name => setChosenPlayers(chosenPlayers.map(x => ({\n    ...x,\n    checked: x.name == name ? !x.checked : x.checked\n  })));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Setup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add new player/select new player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: () => nav(\"/finish\"),\n      children: \"Record Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-5\",\n      children: chosenPlayers.map(x => /*#__PURE__*/_jsxDEV(Form.Check, {\n        label: x.name,\n        checked: x.checked,\n        onChange: () => togglePlayer(x.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Setup, \"dSaG9XyEgfUedcXAPAkGpcji6v4=\", false, function () {\n  return [useNavigate];\n});\n_c = Setup;\nvar _c;\n$RefreshReg$(_c, \"Setup\");","map":{"version":3,"names":["Button","Form","useNavigate","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Setup","_ref","_s","previousPlayers","setSetupInfo","nav","chosenPlayers","setChosenPlayers","map","x","name","checked","togglePlayer","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","className","Check","label","onChange","_c","$RefreshReg$"],"sources":["C:/Users/steph/OneDrive/Documents/GitHub/personal/tca-raccoon-tycoon/raccoon-tycoon-app/src/Setup.tsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nexport interface SetupProps {\r\n    previousPlayers: string[];\r\n    setSetupInfo: (info: SetupInfo) => void;\r\n};\r\n\r\nexport const Setup: React.FC<SetupProps> = ({\r\n    previousPlayers\r\n    , setSetupInfo\r\n}) => {\r\n\r\n    const nav = useNavigate();\r\n\r\n    const [chosenPlayers, setChosenPlayers] = useState(\r\n        previousPlayers.map(x => ({\r\n            name: x\r\n            , checked: false\r\n        }))\r\n    );\r\n\r\n    const togglePlayer = (name: string) => setChosenPlayers(\r\n        chosenPlayers.map(x => ({\r\n            ...x \r\n            , checked: x.name == name ? !x.checked : x.checked\r\n        }))\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <h2>Setup</h2>\r\n            <p>Add new player/select new player</p>\r\n            <Button \r\n                variant=\"primary\"\r\n                onClick={() => nav(\"/finish\")}    \r\n            >\r\n                Record Game\r\n            </Button>{' '}\r\n\r\n            <Form className = \"mt-5\">\r\n                {\r\n                    chosenPlayers.map(x =>(\r\n                        <Form.Check\r\n                            label={x.name}\r\n                            checked={x.checked}\r\n                            onChange={() => togglePlayer(x.name)} \r\n                        />\r\n                    ))\r\n                }\r\n            </Form>\r\n        </>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAKhC;AAED,OAAO,MAAMC,KAA2B,GAAGC,IAAA,IAGrC;EAAAC,EAAA;EAAA,IAHsC;IACxCC,eAAe;IACbC;EACN,CAAC,GAAAH,IAAA;EAEG,MAAMI,GAAG,GAAGX,WAAW,EAAE;EAEzB,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAC9CQ,eAAe,CAACK,GAAG,CAACC,CAAC,KAAK;IACtBC,IAAI,EAAED,CAAC;IACLE,OAAO,EAAE;EACf,CAAC,CAAC,CAAC,CACN;EAED,MAAMC,YAAY,GAAIF,IAAY,IAAKH,gBAAgB,CACnDD,aAAa,CAACE,GAAG,CAACC,CAAC,KAAK;IACpB,GAAGA,CAAC;IACFE,OAAO,EAAEF,CAAC,CAACC,IAAI,IAAIA,IAAI,GAAG,CAACD,CAAC,CAACE,OAAO,GAAGF,CAAC,CAACE;EAC/C,CAAC,CAAC,CAAC,CACN;EAED,oBACId,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACdpB,OAAA;MAAAgB,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACvCpB,OAAA,CAACL,MAAM;MACH0B,OAAO,EAAC,SAAS;MACjBC,OAAO,EAAEA,CAAA,KAAMd,GAAG,CAAC,SAAS,CAAE;MAAAQ,QAAA,EACjC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAAC,GAAG,eAEbpB,OAAA,CAACJ,IAAI;MAAC2B,SAAS,EAAG,MAAM;MAAAP,QAAA,EAEhBP,aAAa,CAACE,GAAG,CAACC,CAAC,iBACfZ,OAAA,CAACJ,IAAI,CAAC4B,KAAK;QACPC,KAAK,EAAEb,CAAC,CAACC,IAAK;QACdC,OAAO,EAAEF,CAAC,CAACE,OAAQ;QACnBY,QAAQ,EAAEA,CAAA,KAAMX,YAAY,CAACH,CAAC,CAACC,IAAI;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEH;EAAA,gBACR;AAEX,CAAC;AAACf,EAAA,CA7CWF,KAA2B;EAAA,QAKxBN,WAAW;AAAA;AAAA8B,EAAA,GALdxB,KAA2B;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}