{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\OneDrive\\\\Documents\\\\GitHub\\\\personal\\\\tca-raccoon-tycoon\\\\raccoon-tycoon-app\\\\src\\\\Setup.tsx\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n;\nexport const Setup = _ref => {\n  _s();\n  let {\n    previousPlayers,\n    setSetupInfo\n  } = _ref;\n  const nav = useNavigate();\n  const [chosenPlayers, setChosenPlayers] = useState(previousPlayers.map(x => ({\n    name: x,\n    checked: false\n  })));\n  const [newPlayerName, setNewPlayerName] = useState(\"\");\n  const togglePlayer = name => setChosenPlayers(chosenPlayers.map(x => ({\n    ...x,\n    checked: x.name == name ? !x.checked : x.checked\n  })));\n  const recordGame = () => {\n    setSetupInfo({\n      start: new Date().toISOString(),\n      chosenPlayers: chosenPlayers.filter(x => x.checked).map(x => x.name)\n    });\n    nav(\"/finish\");\n  };\n  const validateAndAddNewPlayer = () => {\n    if (newPlayerName.length == 0 || chosenPlayers.some(x => x.name.localeCompare(newPlayerName) == 0)) {\n      return;\n    }\n    setChosenPlayers([...chosenPlayers, {\n      name: newPlayerName,\n      checked: true\n    }]);\n    setNewPlayerName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Setup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add new player/select new player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: recordGame,\n      children: \"Record Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Form, {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Add New Player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Player name\",\n          value: newPlayerName,\n          onChange: e => setNewPlayerName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: validateAndAddNewPlayer,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), chosenPlayers.map(x => /*#__PURE__*/_jsxDEV(Form.Check, {\n        label: x.name,\n        checked: x.checked,\n        onChange: () => togglePlayer(x.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Setup, \"tKnAQwoGBW3/m95xb0IalUcl6cQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Setup;\nvar _c;\n$RefreshReg$(_c, \"Setup\");","map":{"version":3,"names":["Button","Form","useNavigate","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Setup","_ref","_s","previousPlayers","setSetupInfo","nav","chosenPlayers","setChosenPlayers","map","x","name","checked","newPlayerName","setNewPlayerName","togglePlayer","recordGame","start","Date","toISOString","filter","validateAndAddNewPlayer","length","some","localeCompare","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","className","Group","Label","Control","type","placeholder","value","onChange","e","target","Check","label","_c","$RefreshReg$"],"sources":["C:/Users/steph/OneDrive/Documents/GitHub/personal/tca-raccoon-tycoon/raccoon-tycoon-app/src/Setup.tsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nexport interface SetupProps {\r\n    previousPlayers: string[];\r\n    setSetupInfo: (info: SetupInfo) => void;\r\n};\r\n\r\nexport const Setup: React.FC<SetupProps> = ({\r\n    previousPlayers\r\n    , setSetupInfo\r\n}) => {\r\n\r\n    const nav = useNavigate();\r\n\r\n    const [chosenPlayers, setChosenPlayers] = useState(\r\n        previousPlayers.map(x => ({\r\n            name: x\r\n            , checked: false\r\n        }))\r\n    );\r\n\r\n    const [newPlayerName, setNewPlayerName] = useState(\"\");\r\n\r\n    const togglePlayer = (name: string) => setChosenPlayers(\r\n        chosenPlayers.map(x => ({\r\n            ...x \r\n            , checked: x.name == name ? !x.checked : x.checked\r\n        }))\r\n    );\r\n\r\n    const recordGame = () => {\r\n        setSetupInfo({\r\n            start: new Date().toISOString()\r\n            , chosenPlayers: chosenPlayers\r\n                .filter(x => x.checked)\r\n                .map(x => x.name)\r\n        });\r\n        nav(\"/finish\");\r\n    };\r\n\r\n    const validateAndAddNewPlayer = () => {\r\n        if (\r\n            newPlayerName.length == 0\r\n            || chosenPlayers.some(x => x.name.localeCompare(newPlayerName) == 0)\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        setChosenPlayers(\r\n            [\r\n                ...chosenPlayers\r\n                , {\r\n                    name: newPlayerName\r\n                    , checked: true\r\n                }\r\n            ]\r\n        );\r\n\r\n        setNewPlayerName(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Setup</h2>\r\n            <p>Add new player/select new player</p>\r\n            <Button \r\n                variant=\"primary\"\r\n                onClick={recordGame}    \r\n            >\r\n                Record Game\r\n            </Button>{' '}\r\n\r\n            <Form className = \"mt-5\">\r\n                <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Add New Player</Form.Label>\r\n                    <Form.Control \r\n                        type=\"text\"\r\n                        placeholder=\"Player name\"\r\n                        value={newPlayerName}\r\n                        onChange={(e) => setNewPlayerName(e.target.value)} \r\n                    />\r\n                    <Button\r\n                        onClick={validateAndAddNewPlayer}\r\n                    >\r\n                        Confirm\r\n                    </Button>\r\n                </Form.Group>               \r\n                {\r\n                    chosenPlayers.map(x =>(\r\n                        <Form.Check\r\n                            label={x.name}\r\n                            checked={x.checked}\r\n                            onChange={() => togglePlayer(x.name)} \r\n                        />\r\n                    ))\r\n                }\r\n            </Form>\r\n        </>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}