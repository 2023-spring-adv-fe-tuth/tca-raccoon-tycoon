[{"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\index.tsx":"1","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\reportWebVitals.ts":"2","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\App.tsx":"3","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\Home.tsx":"4","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\Finish.tsx":"5","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\Setup.tsx":"6","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\front-end-model.ts":"7","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\tca-cloud-api.js":"8"},{"size":554,"mtime":1679957184323,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1679957183717,"results":"11","hashOfConfig":"10"},{"size":3696,"mtime":1683783424944,"results":"12","hashOfConfig":"10"},{"size":2100,"mtime":1683816930143,"results":"13","hashOfConfig":"10"},{"size":1159,"mtime":1683817173548,"results":"14","hashOfConfig":"10"},{"size":3084,"mtime":1683816989191,"results":"15","hashOfConfig":"10"},{"size":3324,"mtime":1680727644902,"results":"16","hashOfConfig":"10"},{"size":1587,"mtime":1682990325590,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1f0fu32",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\index.tsx",[],[],[],"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\App.tsx",["46","47"],[],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Home } from './Home';\nimport { Setup } from './Setup';\nimport { Finish } from './Finish';\nimport logo from './hat.png';\n\nimport { \n  GameResult\n  , CalculateLeaderboardFunc\n  , calculateLeaderboard\n  , getPreviousPlayers\n  , SetupInfo \n} from './front-end-model';\n\nimport { \n  HashRouter\n  , Routes\n  , Route \n} from 'react-router-dom';\n\nimport { useState, useEffect } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport localforage from 'localforage';\n\nimport { saveGameToCloud, loadGamesFromCloud } from './tca-cloud-api';\n\n\nconst App = () => {\n\n  //State hooks\n  const [results, setGameResults] = useState<GameResult[]>([]);\n\n  const [setupInfo, setSetupInfo] = useState<SetupInfo>({\n    start: \" \"\n    , chosenPlayers: []\n  });\n\n  const [emailKeyInput, setEmailKeyInput] = useState(\"\");\n  const [emailKeySaved, setEmailKeySaved] = useState(\"\");\n\n  //useEffect hook\n  useEffect(\n    () => {\n\n      const loadEmailKeyAndGameResults = async () => {\n      \n        try {\n\n          const ek = String(await localforage.getItem(\"emailKey\")) ?? \"\";\n\n          if (ek.length > 0) {\n\n            const resultsFromCloud = await loadGamesFromCloud(\n              ek\n              , \"tca-raccoon-tycoon\"\n            );\n            \n          }\n\n          if(!ignore) {\n          setEmailKeyInput(ek);\n          setEmailKeySaved(ek);\n          }\n        }\n        catch (err) {\n          console.error(err);\n        }\n      };\n \n      let ignore = false;\n      loadEmailKeyAndGameResults();\n      return () => {\n        ignore = true;\n      };\n    }\n    , []\n  );\n\n\n  //Helper functions\n  const addGameResult = (r: GameResult) => {\n\n    //Save game result to cloud.\n    saveGameToCloud(\n      emailKeySaved\n      , \"tca-raccoon-tycoon\"\n      , r.end\n      , r\n    );\n\n    //Optimistically update the lifted app state.\n    setGameResults([\n      ...results \n      , r\n    ]);\n  };\n\n  const saveEmailKey = async () => {\n    try {\n      await localforage.setItem(\n        \"emailKey\"\n        , emailKeyInput\n      );\n\n      setEmailKeySaved(emailKeyInput);\n    }\n    catch (err) {\n      console.error(err);\n    }\n  };\n\n\n\n  return (\n    <div className=\"App m-3\">\n      <img src={logo} alt=\"logo\" className=\"hat w-50\" />\n      <h1>\n        TCA Raccoon Tycoon\n      </h1>\n      <h2>\n        Companion App\n      </h2>\n      <form>\n      <Form.Group className=\"mb-3\">\n        <Form.Label>Main Player Email:</Form.Label>\n          <Form.Control \n            type=\"text\"\n            placeholder=\"Main player email\"\n            value={emailKeyInput}\n            onChange={(e) => setEmailKeyInput(e.target.value)} \n            className=\"mb-3\"\n          />\n            <Button\n              onClick={saveEmailKey}\n            >\n              Save\n            </Button>\n      </Form.Group>\n      </form>  \n      <hr />\n      <HashRouter>\n        <Routes>\n          <Route \n            path=\"/\" \n            element={\n              <Home\n                leaderboardData={calculateLeaderboard(results)}\n              />\n            } \n          />\n          <Route \n            path=\"/setup\" \n            element={\n              <Setup\n                previousPlayers={getPreviousPlayers(results)}\n                setSetupInfo={setSetupInfo}     \n              />\n            } \n          />\n          <Route \n            path=\"/finish\" \n            element={\n              <Finish\n              addGameResultFunc={addGameResult}\n              setupInfo={setupInfo} \n              />\n            } \n          />\n        </Routes>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\Home.tsx",["48"],[],"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\Finish.tsx",[],[],"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\Setup.tsx",["49","50","51"],[],"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\front-end-model.ts",[],[],"C:\\Users\\steph\\OneDrive\\Documents\\GitHub\\personal\\tca-raccoon-tycoon\\raccoon-tycoon-app\\src\\tca-cloud-api.js",["52","53"],[],"import { marshall, unmarshall } from '@aws-sdk/util-dynamodb';\r\n\r\nexport const saveGameToCloud = async (email, appName, timestamp, gameResult) => {\r\n\r\n    const dynamoGame = {\r\n        pk: email\r\n        , sk: '${appName}#${timestamp}'\r\n\r\n        , ts: timestamp\r\n        , user: email\r\n        , app: appName\r\n\r\n        , gsi1pk: appName\r\n        , gsi1sk: timestamp\r\n\r\n        , game: gameResult\r\n    };\r\n\r\n    console.log(\"Unmarshalled Game\", dynamoGame);\r\n\r\n    const marshalledGame = marshall(\r\n        dynamoGame\r\n        , {\r\n            removeUndefinedValues: true\r\n            , convertClassInstanceToMap: true\r\n        }\r\n    );\r\n\r\n    console.log(\"MarshalledGame\", marshalledGame);\r\n\r\n    const options = {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            TableName: \"tca-data\",\r\n            Item: marshalledGame\r\n        })\r\n    };\r\n\r\n    await fetch(\r\n        \"https://32wop75hhc.execute-api.us-east-1.amazonaws.com/prod/data\"\r\n        , options\r\n    );\r\n};\r\n\r\nexport const loadGamesFromCloud = async (email,appName) => {\r\n\r\n    const url = 'https://32wop75hhc.execute-api.us-east-1.amazonaws.com/prod/data/?user=${email}&game=${appName}';\r\n\r\n    console.log(\"url\", url);\r\n\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n\r\n    console.log(\"Marshalled Response\", data);\r\n\r\n    const unmarshalledData = data.Items.map(x => unmarshall(x, {convertEmptyValues: true}));\r\n\r\n    console.log(\"Unmarshalled Response\", unmarshalledData);\r\n\r\n    const gameResults = unmarshalledData.map(x => x.game);\r\n    return gameResults;\r\n};",[],{"ruleId":"54","severity":1,"message":"55","line":11,"column":5,"nodeType":"56","messageId":"57","endLine":11,"endColumn":29},{"ruleId":"54","severity":1,"message":"58","line":56,"column":19,"nodeType":"56","messageId":"57","endLine":56,"endColumn":35},{"ruleId":"59","severity":1,"message":"60","line":26,"column":44,"nodeType":"61","messageId":"62","endLine":26,"endColumn":46},{"ruleId":"59","severity":1,"message":"60","line":31,"column":31,"nodeType":"61","messageId":"62","endLine":31,"endColumn":33},{"ruleId":"59","severity":1,"message":"60","line":47,"column":34,"nodeType":"61","messageId":"62","endLine":47,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":48,"column":76,"nodeType":"61","messageId":"62","endLine":48,"endColumn":78},{"ruleId":"63","severity":1,"message":"64","line":7,"column":15,"nodeType":"65","messageId":"66","endLine":7,"endColumn":40},{"ruleId":"63","severity":1,"message":"64","line":47,"column":17,"nodeType":"65","messageId":"66","endLine":47,"endColumn":114},"@typescript-eslint/no-unused-vars","'CalculateLeaderboardFunc' is defined but never used.","Identifier","unusedVar","'resultsFromCloud' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression"]